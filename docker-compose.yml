networks:
  inside:
    external: false

services:
  db:
    image: mariadb:11.4
#    env_file:
#      - .env
    container_name: "ojs_db_rua"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-ojsPwd}"
      MYSQL_DATABASE: "${OJS_DB_NAME:-ojs}"
      MYSQL_USER: "${OJS_DB_USER:-ojs}"
      MYSQL_PASSWORD: "${OJS_DB_PASSWORD:-ojsPwd}"
    volumes:
      - ./volumes/db:/var/lib/mysql
      - ./volumes/db-import:/docker-entrypoint-initdb.d
#      - ./volumes/logs/db:/var/log/mysql
#      - ./volumes/config/db.charset.conf:/etc/mysql/conf.d/charset.cnf
    networks:
      - inside
    restart: unless-stopped

  ojs:
    image: "pkpofficial/ojs:latest"
#    env_file:
#      - .env
    container_name: "ojs_app_rua"
    environment:
      - SERVERNAME=${PROJECT_DOMAIN}
    hostname: "rua"
    ports:
      - "8081:80"
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime
      - ./volumes/private:/var/www/files
      - ./volumes/public:/var/www/html/public
#      - ./volumes/logs/app:/var/log/apache2
#      # WARNING: You can only enable file-volumes if file exists in the container.
      - ./volumes/config/ojs.config.inc.php:/var/www/html/config.inc.php
#      - ./volumes/config/apache.htaccess:/var/www/html/.htaccess
#      - ./volumes/php.custom.ini:/usr/local/etc/php/conf.d/custom.ini

    networks:
      - inside
    depends_on:
      - db
    restart: unless-stopped
  certbot:
    build: ./certbot
    environment:
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      PROJECT_DOMAIN: ${PROJECT_DOMAIN}
    volumes:
      - ./volumes/certbot:/etc/letsencrypt
      - ./volumes/ojs/public:/vol/www
    networks:
      - inside
    depends_on:
      - ojs
    restart: unless-stopped
